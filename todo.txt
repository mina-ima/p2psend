## アプリケーション開発ToDoリスト

### 0. 全体準備
- [x] README更新: アプリケーションの概要、技術スタック、デプロイ方法（VercelとRender.com）を追記。
- [x] PeerJSサーバーのコードをGitHubリポジトリに分離。
- [x] PeerJSサーバーをRender.comにデプロイ。
- [x] デプロイされたPeerJSサーバーのURLを取得。
- [x] フロントエンドのApp.tsxを修正し、環境変数からPeerJSサーバーのURLを取得するように変更。
- [x] Vercelにフロントエンドをデプロイする際に、PeerJSサーバーのURLを環境変数として設定.

### 1. フロントエンド開発
- [x] UIコンポーネントの実装（ファイル選択、接続ID表示、転送進捗表示など）。
- [x] P2P接続ロジックの実装（PeerJSの初期化、接続IDの生成・共有、データチャネルの確立）。
- [x] ファイル送受信ロジックの実装（ファイルデータのチャンク化、転送、進捗更新）。
- [x] QRコード生成・読み取り機能の実装。
- [ ] レスポンシブデザインの適用。

### 2. バックエンド開発（PeerJSサーバー）
- [ ] PeerJSサーバーのセットアップ（Node.js/Express）。
- [ ] サーバーの起動と基本的なルーティング。

### 3. テスト
- [ ] 単体テスト（各コンポーネント、ロジック）。
- [ ] 結合テスト（フロントエンドとPeerJSサーバー間の接続、ファイル転送）。
- [ ] E2Eテスト（全体的なユーザーフロー）。

### 4. デプロイと公開
- [x] Vercelへのフロントエンドデプロイ。
- [ ] Render.comへのPeerJSサーバーデプロイ。
- [ ] ドメイン設定（オプション）。

### 5. ドキュメンテーション
- [ ] READMEの最終更新。
- [ ] 技術設計ドキュメントの作成（オプション）。